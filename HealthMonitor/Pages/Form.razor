@using Days;

@page "/day"

<EditForm Model="@day" OnValidSubmit="@HandleValidSubmit" class="custom-form">
    <div class="form-group">    
        <label for="date">Date</label>
        <InputDate id="date" @bind-Value="day.Date" />
    </div>
    <div class="form-group">
        <label for="sleep">How was your sleep?</label>
        <InputSelect id="sleep" @bind-Value="day.QualityOfSleep">
            @for (int x = 0; x <= 10; x++)
            {
                <option value="@x">@x</option>
            }
        </InputSelect>
    </div>
    <div class="form-group">    
        <label for="sport">How much sport did you do?</label>
        <InputSelect id="sport" @bind-Value="day.Sport">
            @for (int x = 0; x <= 10; x++)
            {
                <option value="@x">@x</option>
            }
        </InputSelect>
    </div>
    <div class="form-group">       
        <label for="sex">Sexual activity?</label>
        <InputSelect id="sex" @bind-Value="day.Sex">
            @for (int x = 0; x <= 10; x++)
            {
                <option value="@x">@x</option>
            }
        </InputSelect>
    </div>
    <div class="form-group">      
        <label for="alcohol">Did you drank alcohol?</label>
        <InputSelect id="alcohol" @bind-Value="day.Alcohol">
            @for (int x = 0; x <= 10; x++)
            {
                <option value="@x">@x</option>
            }
        </InputSelect>
    </div>
    <div class="form-group">      
        <label for="healthStatus">How did you feel today? 5 is average</label>
        <InputSelect id="healthStatus" @bind-Value="day.HealthStatus">
            @for (int x = 0; x <= 10; x++)
            {
                <option value="@x">@x</option>
            }
        </InputSelect>
    </div>
    <div class="form-group">                              
        <label for="drugs">Which drugs did you take?</label>
        <InputText @bind-Value="day.Drug" />
    </div>
    <button type="submit">Submit</button>
</EditForm>

@code {
    private Day day = new() {};
    private List<Day> days = new();
    private List<Day> daysFromDisk = new();
    Persistence.FileSaver fileSaver = new Persistence.FileSaver();
    Persistence.FileLoader fileLoader = new Persistence.FileLoader();

    protected override void OnInitialized()
    {
        daysFromDisk = fileLoader.ObjectsFromFile();
        day.Date = DateTime.Now;
    }

    private void HandleValidSubmit()
    {
        if (day is not null )
        {
            days.Add(day);
            fileSaver.SaveDayToFileOnDisk( day, day.Date );
        }
    }
}
